;; webDAV utils (requires Sardine library on classpath)

(import :com.github.sardine.DavResource)
(import :com.github.sardine.Sardine)
(import :com.github.sardine.SardineFactory)
(import :com.github.sardine.Version)


(def webdav/avail? (fn []
   (some? (. :Sardine :class))))

(def webdav/get-as-stream (fn [url props]
   (let [{:keys [username password]} 
         sardine (. :SardineFactory :begin username password)] 
         (try      
            (. sardine :get)
            (finally (. sardine :shutdown))))))

(def webdav/get-as-file (fn [url props file]
   (try-with [os (webdav/get-as-stream url props)]
      (io/spit-stream os bytes :flush true))))

(def webdav/put (fn [url data props]
   (let [{:keys [username password content-type]} 
         sardine (. :SardineFactory :begin username password)]       
         (try      
            (. sardine :put url data content-type)
            (finally (. sardine :shutdown))))))

(def webdav/put-file (fn [url file props]
   (webdav/put url (io/slurp file :binary true) props)))

(def webdav/exists? (fn [url props]
   (let [{:keys [username password]} 
         sardine (. :SardineFactory :begin username password)]       
         (try      
            (. sardine :exists url)
            (finally (. sardine :shutdown))))))
