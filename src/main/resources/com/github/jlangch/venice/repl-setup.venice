;;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2020 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; REPL setup


(ns repl-setup)

(load-module :maven)
(load-module :ansi)


(def libs [ "org.fusesource.jansi:jansi:1.18",
            "org.knowm.xchart:xchart:3.6.3",
            "org.apache.tomcat.embed:tomcat-embed-core:9.0.34",
            "org.apache.tomcat.embed:tomcat-embed-websocket:9.0.34",
            "javax.annotation:javax.annotation-api:1.3.2",
            "org.xhtmlrenderer:flying-saucer-core:9.1.20",
            "org.xhtmlrenderer:flying-saucer-pdf-openpdf:9.1.20",
            "com.github.librepdf:openpdf:1.3.16",
            "com.github.librepdf:pdf-toolbox:1.3.16" ])

(def fonts-base-url "https://github.com/google/fonts/tree/master/")

(def fonts [ "apache/opensans/OpenSans-Regular.ttf",
             "apache/opensans/OpenSans-Italic.ttf",
             "apache/opensans/OpenSans-Light.ttf",
             "apache/opensans/OpenSans-Bold.ttf",
             "ofl/sourcecodepro/SourceCodePro-Regular.ttf",
             "ofl/sourcecodepro/SourceCodePro-Light.ttf",
             "ofl/sourcecodepro/SourceCodePro-Bold.ttf",
             "ofl/audiowide/Audiowide-Regular.ttf",
             "ofl/roboto/static/Roboto-Black.ttf",
             "ofl/roboto/static/Roboto-BlackItalic.ttf",
             "ofl/roboto/static/Roboto-Bold.ttf",
             "ofl/roboto/static/Roboto-BoldItalic.ttf",
             "ofl/roboto/static/Roboto-Italic.ttf",
             "ofl/roboto/static/Roboto-Light.ttf",
             "ofl/roboto/static/Roboto-LightItalic.ttf",
             "ofl/roboto/static/Roboto-Medium.ttf",
             "ofl/roboto/static/Roboto-MediumItalic.ttf",
             "ofl/roboto/static/Roboto-Regular.ttf",
             "ofl/roboto/static/Roboto-Thin.ttf",
             "ofl/roboto/static/Roboto-ThinItalic.ttf" ])
},


(defn- missing-libs [dir libs]
  (->> libs)
       (map (fn [a] (cons a (maven/parse-artefact a maven/rep ".jar"))))
       (filter (not (io/file-exists? (io/file dir (third %)))))
       (map first))


(defn download-libs [dir libs]
  (let [artefacts (repl-setup/missing-libs dir libs)]
    (when-not (empty? artefacts)
       (println "Downloading Java libraries...")
       (when-not (internet-avail?)
          (throw (. :VncException :new "Internet is not available!")))
       (docoll #(maven/download % :dir dir)))))


(defn- missing-fonts [dir fonts]
  (->> fonts)
       (map (fn [f] [f (io/file-name f)]))
       (filter (not (io/file-exists? (io/file dir (second %)))))
       (map first))


(defn download-font [uri dir font-name]
  (let [target (io/file dir font-name)
        progress-fn (ansi/progress-bar
                        :caption     (str font-name " ")
                        :start-msg   ""
                        :end-msg     (str font-name " ok")
                        :failed-msg  (str font-name " failed"))]
    (io/spit target (io/download uri
                        :binary true
                        :user-agent "Mozilla"
                        :progress-fn progress-fn))))


(defn download-fonts [dir fonts]
  (let [required-fonts (repl-setup/missing-fonts dir libs)]
    (when-not (empty? required-fonts)
       (println "Downloading Fonts...")
       (when-not (internet-avail?)
          (throw (. :VncException :new "Internet is not available!")))
       (docoll (fn [f] (repl-setup/download-font (str fonts-base-url f)
                                                 dir
                                                 (io/file-name f)))))))
