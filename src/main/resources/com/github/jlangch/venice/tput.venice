;;;   __    __         _
;;;;   \ \  / /__ _ __ (_) ___ ___
;;;;    \ \/ / _ \ '_ \| |/ __/ _ \
;;;;     \  /  __/ | | | | (_|  __/
;;;;      \/ \___|_| |_|_|\___\___|
;;;;
;;;;
;;;; Copyright 2017-2020 Venice
;;;;
;;;; Licensed under the Apache License, Version 2.0 (the "License");
;;;; you may not use this file except in compliance with the License.
;;;; You may obtain a copy of the License at
;;;;
;;;;     http://www.apache.org/licenses/LICENSE-2.0
;;;;
;;;; Unless required by applicable law or agreed to in writing, software
;;;; distributed under the License is distributed on an "AS IS" BASIS,
;;;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;;; See the License for the specific language governing permissions and
;;;; limitations under the License.

;;;; tput utilities


(ns tput)


(load-module :shell)


(defn
  ^{ :arglists '("(cols)")
     :doc "Returns the number of columns of the terminal"
     :examples '("(tput/cols)") }

  cols []

  (shell/require-mac-or-linux)
  (long (str/trim (:out (core/sh "tput" "cols" :throw-ex true)))))


(defn
  ^{ :arglists '("(lines)")
     :doc "Returns the number of lines of the terminal"
     :examples '("(tput/lines)") }

  lines []

  (shell/require-mac-or-linux)
  (long (str/trim (:out (core/sh "tput" "lines" :throw-ex true)))))


(defn
  ^{ :arglists '("(cup x y)")
     :doc "Positions the cursor in the terminal. (0,0) is the upper left corner."
     :examples '("(tput/cup 0 10)") }

  cup [x y]

  (shell/require-mac-or-linux)
  (core/sh "tput" "cup" y x)
  nil)


(defn
  ^{ :arglists '("(clear)")
     :doc "Clears the terminal."
     :examples '("(tput/clear)") }

  clear []

  (shell/require-mac-or-linux)
  (core/sh "tput" "clear")
  nil)
