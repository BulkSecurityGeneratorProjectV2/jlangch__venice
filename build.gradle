/*   __    __         _
 *   \ \  / /__ _ __ (_) ___ ___ 
 *    \ \/ / _ \ '_ \| |/ __/ _ \
 *     \  /  __/ | | | | (_|  __/
 *      \/ \___|_| |_|_|\___\___|
 *
 *
 * Copyright 2017-2019 Venice
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
 
 // to get the gradle wrapper init a new gradle project:
 //   ❯ mkdir test
 //   ❯ cd test
 //   ❯ gradle init

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'UTF-8'
    options.compilerArgs += "-parameters"
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'UTF-8'
    options.compilerArgs += "-parameters"
}

repositories {
    jcenter()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
            exclude 'com/github/jlangch/venice/impl/docgen/**'
        }
        resources {
            srcDirs = ['src/main/resources']
		}
    }
}

jar {
    from('src/main/resources') {
        include 'com/github/jlangch/venice/**/*.venice'
        include 'com/github/jlangch/venice/**/*.json'
    }

    manifest {
        attributes 'Main-Class': 'com.github.jlangch.venice.Launcher'
    }
    
    archiveName = "venice-${version}.jar"
}

shadowJar {
    // https://github.com/johnrengelman/shadow/blob/master/README.md
    
    relocate 'io.vavr', 'org.repackage.io.vavr'
    relocate 'org.jline', 'org.repackage.org.jline'
    relocate 'org.json.simple', 'org.repackage.org.json.simple'
    
    from('src/main/resources') {
        include 'com/github/jlangch/venice/**/*.venice'
        include 'com/github/jlangch/venice/**/*.json'
    }

    manifest {
        attributes 'Main-Class': 'com.github.jlangch.venice.Launcher'
    }
    
    archiveName = "venice-${version}.jar"
}

task cheatsheet(type: JavaExec, dependsOn: compileJava) {
	description="Generate cheatsheet"

    main = 'com.github.jlangch.venice.impl.docgen.DocGenerator'
    classpath = sourceSets.main.runtimeClasspath + sourceSets.main.allSource
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    
    archiveName = "venice-${version}-sources.jar"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    
    archiveName = "venice-${version}-javadoc.jar"
}

task bundle(type: Exec, dependsOn: [clean, shadowJar, sourcesJar, javadocJar]) {
    workingDir 'build/libs'
    
    commandLine "/bin/sh", 
                "-c", 
                "cp ../../pom.xml ." + 
                  "; echo 'Signing artifacts...'" +
                  "; gpg2 -ab pom.xml" +
                  "; gpg2 -ab venice-${version}-javadoc.jar" +
                  "; gpg2 -ab venice-${version}-sources.jar" +
                  "; gpg2 -ab venice-${version}.jar" +
                  "; echo 'Bundling artifacts...'" +
                  "; jar -cvf bundle.jar" +
                         " pom.xml pom.xml.asc" +
                         " venice-${version}-javadoc.jar venice-${version}-javadoc.jar.asc" +
                         " venice-${version}-sources.jar venice-${version}-sources.jar.asc" +
                         " venice-${version}.jar venice-${version}.jar.asc" +
                  "; echo 'Bundling done.'"
                         
    standardOutput new ByteArrayOutputStream()
    
  	doLast {
		println standardOutput.toString()
	}
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

dependencies {
    testCompile 'junit:junit:4.12'

//    compile 'org.antlr:ST4:4.0.8'
//    compile 'org.apache.commons:commons-text:1.2'
//    compile 'org.apache.commons:commons-lang3:3.7'
//    compile 'com.github.librepdf:openpdf:1.2.10'
//    compile 'org.xhtmlrenderer:flying-saucer-core:9.1.16'
//    compile 'org.xhtmlrenderer:flying-saucer-pdf-openpdf:9.1.16'

    compile 'io.vavr:vavr:0.10.0'
    compile 'org.jline:jline:3.10.0'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
}
