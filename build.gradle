import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '4.0.3'
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'UTF-8'
    options.compilerArgs += "-parameters"
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'UTF-8'
    options.compilerArgs += "-parameters"
}

repositories {
    jcenter()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
            exclude 'com/github/jlangch/venice/impl/docgen/**'
        }
    }
}

jar {
    from('src/main/java') {
        include 'com/github/jlangch/venice/**/*.venice'
    }

    manifest {
        attributes 'Main-Class': 'com.github.jlangch.venice.REPL'
    }
    
    archiveName = "venice-${version}.jar"
}

shadowJar {
    relocate 'io.vavr', 'org.repackage.io.vavr'

    from('src/main/java') {
        include 'com/github/jlangch/venice/**/*.venice'
    }

    manifest {
        attributes 'Main-Class': 'com.github.jlangch.venice.REPL'
    }
    
    archiveName = "venice-${version}.jar"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    
    archiveName = "venice-${version}-sources.jar"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    
    archiveName = "venice-${version}-javadoc.jar"
}

task bundle(type: Exec, dependsOn: [clean, shadowJar, sourcesJar, javadocJar]) {
    workingDir 'build/libs'
    
    commandLine "/bin/sh", 
                "-c", 
                "cp ../../pom.xml ." + 
                  "; echo 'Signing...'" +
                  "; gpg2 -ab pom.xml" +
                  "; gpg2 -ab venice-${version}-javadoc.jar" +
                  "; gpg2 -ab venice-${version}-sources.jar" +
                  "; gpg2 -ab venice-${version}.jar" +
                  "; echo 'Creating bundle...'" +
                  "; jar -cvf bundle.jar" +
                         " pom.xml pom.xml.asc" +
                         " venice-${version}-javadoc.jar venice-${version}-javadoc.jar.asc" +
                         " venice-${version}-sources.jar venice-${version}-sources.jar.asc" +
                         " venice-${version}.jar venice-${version}.jar.asc" +
                 "; echo 'Bundle done.'"
                         
    standardOutput new ByteArrayOutputStream()
    
  	doLast {
		println standardOutput.toString()
	}
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

dependencies {
    //compile 'org.foo:foo:1.0'
    testCompile 'junit:junit:4.12'

    compile 'io.vavr:vavr:0.9.3'
}
